/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result, EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface TalkoFactoryInterface extends utils.Interface {
  contractName: "TalkoFactory";
  functions: {
    "EndorseERC721BeaconAddress()": FunctionFragment;
    "LikeERC721BeaconAddress()": FunctionFragment;
    "ShareableERC721BeaconAddress()": FunctionFragment;
    "createEndorseERC721Proxy(string,string,address)": FunctionFragment;
    "createLikeERC721Proxy(string,string,address)": FunctionFragment;
    "createShareableERC721Proxy(string,string,address)": FunctionFragment;
    "endorsableProxyNameExists(string)": FunctionFragment;
    "getIndexForEndorseERC721ProxyInstance()": FunctionFragment;
    "getIndexForLikeERC721ProxyInstance()": FunctionFragment;
    "getIndexForShareableERC721ProxyInstance()": FunctionFragment;
    "likeableProxyNameExists(string)": FunctionFragment;
    "shareableProxyNameExists(string)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "EndorseERC721BeaconAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "LikeERC721BeaconAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ShareableERC721BeaconAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "createEndorseERC721Proxy",
    values: [string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "createLikeERC721Proxy",
    values: [string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "createShareableERC721Proxy",
    values: [string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "endorsableProxyNameExists",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getIndexForEndorseERC721ProxyInstance",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getIndexForLikeERC721ProxyInstance",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getIndexForShareableERC721ProxyInstance",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "likeableProxyNameExists",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "shareableProxyNameExists",
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: "EndorseERC721BeaconAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "LikeERC721BeaconAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ShareableERC721BeaconAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createEndorseERC721Proxy",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createLikeERC721Proxy",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createShareableERC721Proxy",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "endorsableProxyNameExists",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getIndexForEndorseERC721ProxyInstance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getIndexForLikeERC721ProxyInstance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getIndexForShareableERC721ProxyInstance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "likeableProxyNameExists",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "shareableProxyNameExists",
    data: BytesLike
  ): Result;

  events: {
    "EndorseERC721ProxyCreated(address,address,string,string)": EventFragment;
    "LikeERC721ProxyCreated(address,address,string,string)": EventFragment;
    "ShareableERC721ProxyCreated(address,address,string,string)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "EndorseERC721ProxyCreated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "LikeERC721ProxyCreated"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ShareableERC721ProxyCreated"
  ): EventFragment;
}

export type EndorseERC721ProxyCreatedEvent = TypedEvent<
  [string, string, string, string],
  { _eproxy: string; _owner: string; _name: string; _symbol: string }
>;

export type EndorseERC721ProxyCreatedEventFilter =
  TypedEventFilter<EndorseERC721ProxyCreatedEvent>;

export type LikeERC721ProxyCreatedEvent = TypedEvent<
  [string, string, string, string],
  { _lproxy: string; _owner: string; _name: string; _symbol: string }
>;

export type LikeERC721ProxyCreatedEventFilter =
  TypedEventFilter<LikeERC721ProxyCreatedEvent>;

export type ShareableERC721ProxyCreatedEvent = TypedEvent<
  [string, string, string, string],
  { _sproxy: string; _owner: string; _name: string; _symbol: string }
>;

export type ShareableERC721ProxyCreatedEventFilter =
  TypedEventFilter<ShareableERC721ProxyCreatedEvent>;

export interface TalkoFactory extends BaseContract {
  contractName: "TalkoFactory";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: TalkoFactoryInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    EndorseERC721BeaconAddress(overrides?: CallOverrides): Promise<[string]>;

    LikeERC721BeaconAddress(overrides?: CallOverrides): Promise<[string]>;

    ShareableERC721BeaconAddress(overrides?: CallOverrides): Promise<[string]>;

    createEndorseERC721Proxy(
      _name: string,
      _symbol: string,
      _owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    createLikeERC721Proxy(
      _name: string,
      _symbol: string,
      _owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    createShareableERC721Proxy(
      _name: string,
      _symbol: string,
      _owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    endorsableProxyNameExists(
      _name: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    getIndexForEndorseERC721ProxyInstance(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getIndexForLikeERC721ProxyInstance(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getIndexForShareableERC721ProxyInstance(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    likeableProxyNameExists(
      _name: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    shareableProxyNameExists(
      _name: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;
  };

  EndorseERC721BeaconAddress(overrides?: CallOverrides): Promise<string>;

  LikeERC721BeaconAddress(overrides?: CallOverrides): Promise<string>;

  ShareableERC721BeaconAddress(overrides?: CallOverrides): Promise<string>;

  createEndorseERC721Proxy(
    _name: string,
    _symbol: string,
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  createLikeERC721Proxy(
    _name: string,
    _symbol: string,
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  createShareableERC721Proxy(
    _name: string,
    _symbol: string,
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  endorsableProxyNameExists(
    _name: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  getIndexForEndorseERC721ProxyInstance(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getIndexForLikeERC721ProxyInstance(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getIndexForShareableERC721ProxyInstance(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  likeableProxyNameExists(
    _name: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  shareableProxyNameExists(
    _name: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  callStatic: {
    EndorseERC721BeaconAddress(overrides?: CallOverrides): Promise<string>;

    LikeERC721BeaconAddress(overrides?: CallOverrides): Promise<string>;

    ShareableERC721BeaconAddress(overrides?: CallOverrides): Promise<string>;

    createEndorseERC721Proxy(
      _name: string,
      _symbol: string,
      _owner: string,
      overrides?: CallOverrides
    ): Promise<string>;

    createLikeERC721Proxy(
      _name: string,
      _symbol: string,
      _owner: string,
      overrides?: CallOverrides
    ): Promise<string>;

    createShareableERC721Proxy(
      _name: string,
      _symbol: string,
      _owner: string,
      overrides?: CallOverrides
    ): Promise<string>;

    endorsableProxyNameExists(
      _name: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    getIndexForEndorseERC721ProxyInstance(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getIndexForLikeERC721ProxyInstance(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getIndexForShareableERC721ProxyInstance(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    likeableProxyNameExists(
      _name: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    shareableProxyNameExists(
      _name: string,
      overrides?: CallOverrides
    ): Promise<boolean>;
  };

  filters: {
    "EndorseERC721ProxyCreated(address,address,string,string)"(
      _eproxy?: string | null,
      _owner?: string | null,
      _name?: null,
      _symbol?: null
    ): EndorseERC721ProxyCreatedEventFilter;
    EndorseERC721ProxyCreated(
      _eproxy?: string | null,
      _owner?: string | null,
      _name?: null,
      _symbol?: null
    ): EndorseERC721ProxyCreatedEventFilter;

    "LikeERC721ProxyCreated(address,address,string,string)"(
      _lproxy?: string | null,
      _owner?: string | null,
      _name?: null,
      _symbol?: null
    ): LikeERC721ProxyCreatedEventFilter;
    LikeERC721ProxyCreated(
      _lproxy?: string | null,
      _owner?: string | null,
      _name?: null,
      _symbol?: null
    ): LikeERC721ProxyCreatedEventFilter;

    "ShareableERC721ProxyCreated(address,address,string,string)"(
      _sproxy?: string | null,
      _owner?: string | null,
      _name?: null,
      _symbol?: null
    ): ShareableERC721ProxyCreatedEventFilter;
    ShareableERC721ProxyCreated(
      _sproxy?: string | null,
      _owner?: string | null,
      _name?: null,
      _symbol?: null
    ): ShareableERC721ProxyCreatedEventFilter;
  };

  estimateGas: {
    EndorseERC721BeaconAddress(overrides?: CallOverrides): Promise<BigNumber>;

    LikeERC721BeaconAddress(overrides?: CallOverrides): Promise<BigNumber>;

    ShareableERC721BeaconAddress(overrides?: CallOverrides): Promise<BigNumber>;

    createEndorseERC721Proxy(
      _name: string,
      _symbol: string,
      _owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    createLikeERC721Proxy(
      _name: string,
      _symbol: string,
      _owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    createShareableERC721Proxy(
      _name: string,
      _symbol: string,
      _owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    endorsableProxyNameExists(
      _name: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getIndexForEndorseERC721ProxyInstance(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getIndexForLikeERC721ProxyInstance(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getIndexForShareableERC721ProxyInstance(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    likeableProxyNameExists(
      _name: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    shareableProxyNameExists(
      _name: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    EndorseERC721BeaconAddress(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    LikeERC721BeaconAddress(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ShareableERC721BeaconAddress(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    createEndorseERC721Proxy(
      _name: string,
      _symbol: string,
      _owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    createLikeERC721Proxy(
      _name: string,
      _symbol: string,
      _owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    createShareableERC721Proxy(
      _name: string,
      _symbol: string,
      _owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    endorsableProxyNameExists(
      _name: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getIndexForEndorseERC721ProxyInstance(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getIndexForLikeERC721ProxyInstance(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getIndexForShareableERC721ProxyInstance(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    likeableProxyNameExists(
      _name: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    shareableProxyNameExists(
      _name: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
